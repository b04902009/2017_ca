$date
	Sun Dec 10 05:53:15 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var reg 1 # Start $end
$var integer 32 $ counter [31:0] $end
$var integer 32 % flush [31:0] $end
$var integer 32 & i [31:0] $end
$var integer 32 ' outfile [31:0] $end
$var integer 32 ( stall [31:0] $end
$scope module CPU $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var wire 32 ) inst_addr [31:0] $end
$var wire 32 * inst [31:0] $end
$var wire 1 + Zero $end
$var wire 32 , MUXforward2_data [31:0] $end
$var wire 2 - MEMWB_sig [1:0] $end
$var wire 1 . Jump $end
$var wire 4 / IDEX_sig [3:0] $end
$var wire 2 0 EXMEM_sig [1:0] $end
$var wire 1 1 Branch $end
$var reg 1 2 EXMEM_MemRead $end
$var reg 1 3 EXMEM_MemWrite $end
$var reg 1 4 MEMWB_MemtoReg $end
$var reg 1 5 MEMWB_RegWrite $end
$scope module ALU $end
$var wire 32 6 data_o [31:0] $end
$var wire 32 7 data2_i [31:0] $end
$var wire 32 8 data1_i [31:0] $end
$var wire 1 + Zero_o $end
$var wire 3 9 ALUCtrl_i [2:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 2 : ALUOp_i [1:0] $end
$var wire 6 ; funct_i [5:0] $end
$var wire 3 < ALUCtrl_o [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 = data2_in [31:0] $end
$var wire 32 > data_o [31:0] $end
$var wire 32 ? data1_in [31:0] $end
$upscope $end
$scope module Add_address $end
$var wire 32 @ data_o [31:0] $end
$var wire 32 A data2_in [31:0] $end
$var wire 32 B data1_in [31:0] $end
$upscope $end
$scope module Control $end
$var wire 6 C Op_i [5:0] $end
$var reg 1 1 branch_o $end
$var reg 10 D ctrl_signal_o [9:0] $end
$var reg 1 . jump_o $end
$upscope $end
$scope module DataMemory $end
$var wire 1 2 MemRead_i $end
$var wire 1 3 MemWrite_i $end
$var wire 1 ! clk_i $end
$var wire 32 E addr_i [31:0] $end
$var wire 32 F Writedata_i [31:0] $end
$var reg 32 G Readdata_o [31:0] $end
$upscope $end
$scope module EXMEM $end
$var wire 32 H addr_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 5 I rd_i [4:0] $end
$var wire 32 J data_i [31:0] $end
$var wire 2 K WB_i [1:0] $end
$var wire 2 L M_i [1:0] $end
$var reg 2 M M_o [1:0] $end
$var reg 2 N WB_o [1:0] $end
$var reg 32 O addr_o [31:0] $end
$var reg 32 P data_o [31:0] $end
$var reg 5 Q rd_o [4:0] $end
$upscope $end
$scope module Flush $end
$var wire 1 1 Branch_i $end
$var wire 1 . Jump_i $end
$var wire 1 + Zero_i $end
$var wire 1 R flush_o $end
$upscope $end
$scope module ForwardUnit $end
$var wire 5 S EXMEM_RD_i [4:0] $end
$var wire 1 T EXMEM_RegWrite_i $end
$var wire 5 U IDEX_RS_i [4:0] $end
$var wire 1 5 MEMWB_RegWrite_i $end
$var wire 5 V MEMWB_RD_i [4:0] $end
$var wire 5 W IDEX_RT_i [4:0] $end
$var reg 2 X Forward1_o [1:0] $end
$var reg 2 Y Forward2_o [1:0] $end
$upscope $end
$scope module HazardDetection $end
$var wire 1 Z IFIDhazard_o $end
$var wire 1 [ MUX_Control_hazard_o $end
$var wire 5 \ rt_i [4:0] $end
$var wire 32 ] inst_i [31:0] $end
$var wire 1 ^ hazard_o $end
$var wire 1 _ MemRead_i $end
$upscope $end
$scope module IDEX $end
$var wire 1 ! clk_i $end
$var wire 5 ` rd_i [4:0] $end
$var wire 5 a rs_i [4:0] $end
$var wire 1 " rst_i $end
$var wire 5 b rt_i [4:0] $end
$var wire 32 c signextend_i [31:0] $end
$var wire 32 d data2_i [31:0] $end
$var wire 32 e data1_i [31:0] $end
$var wire 2 f WB_i [1:0] $end
$var wire 2 g M_i [1:0] $end
$var wire 4 h EX_i [3:0] $end
$var reg 4 i EX_o [3:0] $end
$var reg 2 j M_o [1:0] $end
$var reg 2 k WB_o [1:0] $end
$var reg 32 l data1_o [31:0] $end
$var reg 32 m data2_o [31:0] $end
$var reg 5 n rd_o [4:0] $end
$var reg 5 o rs_o [4:0] $end
$var reg 5 p rt_o [4:0] $end
$var reg 32 q signextend_o [31:0] $end
$upscope $end
$scope module IFID $end
$var wire 1 ! clk_i $end
$var wire 1 R flush_i $end
$var wire 1 Z hazard_i $end
$var wire 32 r pc_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 32 s inst_i [31:0] $end
$var reg 32 t inst_o [31:0] $end
$var reg 32 u pc_o [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 v instr_o [31:0] $end
$var wire 32 w addr_i [31:0] $end
$upscope $end
$scope module MEMWB $end
$var wire 2 x WB_i [1:0] $end
$var wire 32 y addr_i [31:0] $end
$var wire 1 ! clk_i $end
$var wire 32 z data_i [31:0] $end
$var wire 5 { rd_i [4:0] $end
$var wire 1 " rst_i $end
$var reg 2 | WB_o [1:0] $end
$var reg 32 } addr_o [31:0] $end
$var reg 32 ~ data_o [31:0] $end
$var reg 5 !" rd_o [4:0] $end
$upscope $end
$scope module MUX32 $end
$var wire 32 "" data2_i [31:0] $end
$var wire 1 #" select_i $end
$var wire 32 $" data_o [31:0] $end
$var wire 32 %" data1_i [31:0] $end
$upscope $end
$scope module MUX5 $end
$var wire 5 &" data1_i [4:0] $end
$var wire 5 '" data2_i [4:0] $end
$var wire 1 (" select_i $end
$var wire 5 )" data_o [4:0] $end
$upscope $end
$scope module MUX_Add $end
$var wire 1 + Zero_i $end
$var wire 32 *" data1_i [31:0] $end
$var wire 32 +" data2_i [31:0] $end
$var wire 1 1 select_i $end
$var reg 32 ," data_o [31:0] $end
$var reg 1 -" select $end
$upscope $end
$scope module MUX_Control $end
$var wire 10 ." ctrl_sig_i [9:0] $end
$var wire 1 [ hazard_i $end
$var reg 2 /" ALUOp [1:0] $end
$var reg 1 0" ALUSrc $end
$var reg 4 1" EX_o [3:0] $end
$var reg 2 2" M_o [1:0] $end
$var reg 1 3" MemRead $end
$var reg 1 4" MemWrite $end
$var reg 1 5" MemtoReg $end
$var reg 1 6" RegDst $end
$var reg 1 7" RegWrite $end
$var reg 2 8" WB_o [1:0] $end
$upscope $end
$scope module MUX_Jump $end
$var wire 32 9" data1_32_i [31:0] $end
$var wire 32 :" data2_i [31:0] $end
$var wire 1 . select_i $end
$var wire 28 ;" data1_28_i [27:0] $end
$var reg 32 <" data1 [31:0] $end
$var reg 32 =" data_o [31:0] $end
$upscope $end
$scope module MUX_Write $end
$var wire 32 >" data1_i [31:0] $end
$var wire 32 ?" data2_i [31:0] $end
$var wire 1 4 select_i $end
$var wire 32 @" data_o [31:0] $end
$upscope $end
$scope module MUXforward_1 $end
$var wire 32 A" EXMEM_addr_i [31:0] $end
$var wire 32 B" MEMWB_data_i [31:0] $end
$var wire 32 C" data_i [31:0] $end
$var wire 2 D" select_i [1:0] $end
$var reg 32 E" data_o [31:0] $end
$upscope $end
$scope module MUXforward_2 $end
$var wire 32 F" EXMEM_addr_i [31:0] $end
$var wire 32 G" MEMWB_data_i [31:0] $end
$var wire 32 H" data_i [31:0] $end
$var wire 2 I" select_i [1:0] $end
$var reg 32 J" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 1 ^ hazard_i $end
$var wire 32 K" pc_i [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 # start_i $end
$var reg 32 L" pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 M" RDaddr_i [4:0] $end
$var wire 32 N" RDdata_i [31:0] $end
$var wire 5 O" RSaddr_i [4:0] $end
$var wire 32 P" RSdata_o [31:0] $end
$var wire 5 Q" RTaddr_i [4:0] $end
$var wire 32 R" RTdata_o [31:0] $end
$var wire 1 5 RegWrite_i $end
$var wire 1 ! clk_i $end
$upscope $end
$scope module ShiftLeft26 $end
$var wire 26 S" data_i [25:0] $end
$var wire 28 T" data_o [27:0] $end
$upscope $end
$scope module ShiftLeft32 $end
$var wire 32 U" data_i [31:0] $end
$var reg 32 V" data_o [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 16 W" data_i [15:0] $end
$var wire 32 X" data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#12
$dumpvars
b0 X"
b0 W"
bx0000 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b100 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b100 ="
b0 <"
b0 ;"
b100 :"
b100 9"
b10 8"
17"
16"
05"
04"
03"
b0 2"
b111 1"
00"
b11 /"
b1110010000 ."
0-"
b100 ,"
bx +"
b100 *"
b0 )"
0("
b0 '"
b0 &"
b0 %"
b0 $"
0#"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
bx z
b0 y
b0 x
b0 w
b100000000100000 v
b0 u
b0 t
b100000000100000 s
b100 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b111 h
b0 g
b10 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
0_
0^
b0 ]
b0 \
0[
0Z
b0 Y
b0 X
b0 W
b0 V
bx U
0T
b0 S
0R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
bx G
b0 F
b0 E
b1110010000 D
b0 C
b0 B
bx0000 A
bx @
b0 ?
b100 >
b100 =
b10 <
b0 ;
b0 :
b10 9
b0 8
b0 7
b0 6
x5
x4
03
02
01
b0 0
b0 /
0.
b0 -
b0 ,
1+
b0 *
b0 )
b0 (
b11 '
b100000 &
b0 %
b0 $
1#
1"
1!
$end
#25
b1 $
0!
#50
b0 9
b0 <
b1000 ="
b1000 K"
bx000000 A
bx000000 V"
b100000000010010000000000001010 s
b100000000010010000000000001010 v
b1000 ,"
b1000 :"
b10000000010000000 <"
b11 :
1("
b100000000100000 c
b100000000100000 U"
b100000000100000 X"
b100000000100000 W"
b10000000010000000 ;"
b10000000010000000 T"
b100000000100000 S"
b1000 `
b0 @"
b0 B"
b0 G"
b0 N"
04
05
b1000 >
b1000 r
b1000 *"
b1000 9"
b100 )
b100 ?
b100 w
b100 L"
b111 /
b111 i
b10 K
b10 k
b100000000100000 *
b100000000100000 ]
b100000000100000 t
b100 B
b100 u
bx ~
bx >"
1!
#75
b10 $
0!
#100
b1000 h
b1000 1"
10"
06"
b0 /"
b1010000 D
b1010000 ."
b10 9
b10 <
bx00000000 A
bx00000000 V"
b1100 ="
b1100 K"
b1001000000000000101000 <"
b1010 c
b1010 U"
b1010 X"
b1010 W"
b1000 C
b1001 Q"
b1001000000000000101000 ;"
b1001000000000000101000 T"
b10010000000000001010 S"
b0 `
b1001 b
b1000 I
b1000 )"
b100000 ;
1T
b10101101000000000000000000000000 s
b10101101000000000000000000000000 v
b1100 ,"
b1100 :"
b100000000010010000000000001010 *
b100000000010010000000000001010 ]
b100000000010010000000000001010 t
b1000 B
b1000 u
b1000 n
b1000 '"
b100000000100000 q
b100000000100000 ""
b10 N
b10 x
b1100 >
b1100 r
b1100 *"
b1100 9"
b1000 )
b1000 ?
b1000 w
b1000 L"
1!
#125
b11 $
0!
#150
b1 g
b1 2"
b0 f
b0 8"
14"
07"
b1001000 D
b1001000 ."
b1010 6
b1010 H
0+
b10 9
b10 <
b1010 7
b1010 $"
b10000 ="
b10000 K"
bx0000000000 A
bx0000000000 V"
b10101101000010010000000000000100 s
b10101101000010010000000000000100 v
b10000 ,"
b10000 :"
b100000000000000000000000000 <"
b1001 I
b1001 )"
b1010 ;
b0 :
1#"
0("
b0 c
b0 U"
b0 X"
b0 W"
b101011 C
b0 Q"
b1000 O"
b100000000000000000000000000 ;"
b100000000000000000000000000 T"
b1000000000000000000000000 S"
b0 b
b1000 a
b10000 >
b10000 r
b10000 *"
b10000 9"
b1100 )
b1100 ?
b1100 w
b1100 L"
b1000 Q
b1000 S
b1000 {
b0 n
b0 '"
b1001 W
b1001 \
b1001 p
b1001 &"
b1010 q
b1010 ""
b1000 /
b1000 i
b10101101000000000000000000000000 *
b10101101000000000000000000000000 ]
b10101101000000000000000000000000 t
b1100 B
b1100 u
b10 -
b10 |
1!
#175
b100 $
0!
#200
b0 6
b0 H
bx000000000000 A
bx000000000000 V"
1+
b10100 ="
b10100 K"
b100001001000000000000010000 <"
b100 c
b100 U"
b100 X"
b100 W"
b1001 Q"
b100001001000000000000010000 ;"
b100001001000000000000010000 T"
b1000010010000000000000100 S"
b1001 b
b0 I
b0 )"
b0 ;
b0 7
b0 $"
b10001101000011010000000000000100 s
b10001101000011010000000000000100 v
b10100 ,"
b10100 :"
15
b10101101000010010000000000000100 *
b10101101000010010000000000000100 ]
b10101101000010010000000000000100 t
b10000 B
b10000 u
b0 W
b0 \
b0 p
b0 &"
b1000 o
b0 q
b0 ""
b1 L
b1 j
b0 K
b0 k
b1001 Q
b1001 S
b1001 {
b1010 E
b1010 O
b1010 y
b1010 A"
b1010 F"
b10100 >
b10100 r
b10100 *"
b10100 9"
b10000 )
b10000 ?
b10000 w
b10000 L"
b1000 V
b1000 !"
b1000 M"
1!
#225
b101 $
0!
#250
b10 g
b10 2"
b11 f
b11 8"
13"
04"
17"
15"
b1110100 D
b1110100 ."
13
b100 6
b100 H
b11000 ="
b11000 K"
0+
b1101010010111100000100000 s
b1101010010111100000100000 v
b11000 ,"
b11000 :"
b100001101000000000000010000 <"
b1010 ,
b1010 J
b1010 %"
b1010 J"
0T
b1001 I
b1001 )"
b100 ;
b100 7
b100 $"
b100011 C
b1101 Q"
b100001101000000000000010000 ;"
b100001101000000000000010000 T"
b1000011010000000000000100 S"
b1101 b
b1 Y
b1 I"
b1010 @"
b1010 B"
b1010 G"
b1010 N"
b11000 >
b11000 r
b11000 *"
b11000 9"
b10100 )
b10100 ?
b10100 w
b10100 L"
b0 Q
b0 S
b0 {
b0 E
b0 O
b0 y
b0 A"
b0 F"
b1 0
b1 M
b0 N
b0 x
b1001 W
b1001 \
b1001 p
b1001 &"
b100 q
b100 ""
b10001101000011010000000000000100 *
b10001101000011010000000000000100 ]
b10001101000011010000000000000100 t
b10100 B
b10100 u
b1001 V
b1001 !"
b1001 M"
b1010 }
b1010 ?"
1!
#275
b110 $
0!
#300
b0 h
b0 1"
b0 g
b0 2"
b0 f
b0 8"
b1110010000 D
b1110010000 ."
bx00000000000000 A
bx00000000000000 V"
1[
1Z
1^
b11100 ="
b11100 K"
b110101001011110000010000000 <"
b111100000100000 c
b111100000100000 U"
b111100000100000 X"
b111100000100000 W"
b0 C
b1010 d
b1010 R"
b1001 Q"
b1101 O"
b110101001011110000010000000 ;"
b110101001011110000010000000 T"
b1101010010111100000100000 S"
b1111 `
b1001 b
b1101 a
b1101 I
b1101 )"
1_
b100000000010100000000000001101 s
b100000000010100000000000001101 v
b11100 ,"
b11100 :"
b0 Y
b0 I"
b0 ,
b0 J
b0 %"
b0 J"
b0 @"
b0 B"
b0 G"
b0 N"
b1101010010111100000100000 *
b1101010010111100000100000 ]
b1101010010111100000100000 t
b11000 B
b11000 u
b1101 W
b1101 \
b1101 p
b1101 &"
b10 L
b10 j
b11 K
b11 k
b1001 Q
b1001 S
b1001 {
b1010 F
b1010 P
b100 E
b100 O
b100 y
b100 A"
b100 F"
b11100 >
b11100 r
b11100 *"
b11100 9"
b11000 )
b11000 ?
b11000 w
b11000 L"
b0 V
b0 !"
b0 M"
b0 }
b0 ?"
b0 -
b0 |
1!
#325
b111 $
b1 (
0!
#350
b1010 ~
b1010 >"
b11 -
b11 |
b1010 G
b1010 z
b111 h
b111 1"
b10 f
b10 8"
03
12
b1010 6
b1010 H
03"
05"
00"
16"
b11 /"
0[
0Z
0^
1T
b1001 I
b1001 )"
b100000 ;
b1010 7
b1010 $"
0#"
0_
b100 @"
b100 B"
b100 G"
b100 N"
05
b1101 Q
b1101 S
b1101 {
b0 F
b0 P
b10 0
b10 M
b11 N
b11 x
b1111 n
b1111 '"
b1001 W
b1001 \
b1001 p
b1001 &"
b1101 o
b111100000100000 q
b111100000100000 ""
b1010 ,
b1010 J
b1010 %"
b1010 J"
b1010 m
b1010 H"
b0 /
b0 i
b0 L
b0 j
b0 K
b0 k
b1101 V
b1101 !"
b1101 M"
b100 }
b100 ?"
1!
#375
b1000 $
0!
#400
b1000 h
b1000 1"
10"
06"
b0 /"
b1010000 D
b1010000 ."
02
b1111 I
b1111 )"
b1010 @"
b1010 B"
b1010 G"
b1010 N"
bx0000000000000000 A
bx0000000000000000 V"
b100000 ="
b100000 K"
b1010000000000000110100 <"
b1101 c
b1101 U"
b1101 X"
b1101 W"
b1000 C
b0 d
b0 R"
b1010 Q"
b0 O"
b1010000000000000110100 ;"
b1010000000000000110100 T"
b10100000000000001101 S"
b0 `
b1010 b
b0 a
b11 :
1("
0T
b1001010010101100000011000 s
b1001010010101100000011000 v
b100000 ,"
b100000 :"
14
15
b100000000010100000000000001101 *
b100000000010100000000000001101 ]
b100000000010100000000000001101 t
b11100 B
b11100 u
b111 /
b111 i
b10 K
b10 k
b1001 Q
b1001 S
b1001 {
b1010 F
b1010 P
b1010 E
b1010 O
b1010 y
b1010 A"
b1010 F"
b0 0
b0 M
b0 N
b0 x
b100000 >
b100000 r
b100000 *"
b100000 9"
b11100 )
b11100 ?
b11100 w
b11100 L"
1!
#425
b1001 $
0!
#450
b111 h
b111 1"
00"
16"
b11 /"
b1110010000 D
b1110010000 ."
b1101 6
b1101 H
b10 9
b10 <
b100100 ="
b100100 K"
0+
bx000000000000000000 A
bx000000000000000000 V"
b1000000000000000000000001011 s
b1000000000000000000000001011 v
b100100 ,"
b100100 :"
b100101001010110000001100000 <"
1T
b1010 I
b1010 )"
b1101 ;
b1101 7
b1101 $"
b0 :
1#"
0("
b101100000011000 c
b101100000011000 U"
b101100000011000 X"
b101100000011000 W"
b0 C
b1010 d
b1010 R"
b1001 Q"
b1010 e
b1010 P"
b1001 O"
b100101001010110000001100000 ;"
b100101001010110000001100000 T"
b1001010010101100000011000 S"
b1011 `
b1001 b
b1001 a
b100100 >
b100100 r
b100100 *"
b100100 9"
b100000 )
b100000 ?
b100000 w
b100000 L"
b1111 Q
b1111 S
b1111 {
b10 N
b10 x
b0 n
b0 '"
b1010 W
b1010 \
b1010 p
b1010 &"
b0 o
b1101 q
b1101 ""
b0 ,
b0 J
b0 %"
b0 J"
b0 m
b0 H"
b1000 /
b1000 i
b1001010010101100000011000 *
b1001010010101100000011000 ]
b1001010010101100000011000 t
b100000 B
b100000 u
b1001 V
b1001 !"
b1001 M"
b1010 }
b1010 ?"
b0 -
b0 |
1!
#475
b1010 $
0!
#500
b0 h
b0 1"
b0 f
b0 8"
07"
06"
b0 /"
b1 D
b1 ."
b101 9
b101 <
1+
1R
b1100100 6
b1100100 H
bx00000000000000000000 A
bx00000000000000000000 V"
1.
b101100 ="
b101100 K"
b101100 <"
b1011 c
b1011 U"
b1011 X"
b1011 W"
b10 C
b0 d
b0 R"
b0 Q"
b0 e
b0 P"
b0 O"
b101100 ;"
b101100 T"
b1011 S"
b0 `
b0 b
b0 a
b1011 I
b1011 )"
b11000 ;
b1010 7
b1010 $"
b11 :
0#"
1("
b100001001010010000000000000001 s
b100001001010010000000000000001 v
b101000 ,"
b101000 :"
04
05
b1000000000000000000000001011 *
b1000000000000000000000001011 ]
b1000000000000000000000001011 t
b100100 B
b100100 u
b1011 n
b1011 '"
b1001 W
b1001 \
b1001 p
b1001 &"
b1001 o
b101100000011000 q
b101100000011000 ""
b1010 ,
b1010 J
b1010 %"
b1010 J"
b1010 m
b1010 H"
b1010 8
b1010 E"
b1010 l
b1010 C"
b111 /
b111 i
b1010 Q
b1010 S
b1010 {
b0 F
b0 P
b1101 E
b1101 O
b1101 y
b1101 A"
b1101 F"
b101000 >
b101000 r
b101000 *"
b101000 9"
b100100 )
b100100 ?
b100100 w
b100100 L"
b1111 V
b1111 !"
b1111 M"
b10 -
b10 |
1!
#525
b1011 $
b1 %
0!
#550
b111 h
b111 1"
b10 f
b10 8"
17"
16"
b11 /"
b1110010000 D
b1110010000 ."
b10 9
b10 <
b0 6
b0 H
0R
bx0000000000000000000000 A
bx0000000000000000000000 V"
0.
b1010010010101000000100010 s
b1010010010101000000100010 v
b110000 ,"
b110000 :"
b110000 ="
b110000 K"
b0 <"
b0 I
b0 )"
b1011 ;
b0 7
b0 $"
1+
b0 :
0("
b0 c
b0 U"
b0 X"
b0 W"
b0 C
b0 ;"
b0 T"
b0 S"
b1101 @"
b1101 B"
b1101 G"
b1101 N"
15
b110000 >
b110000 r
b110000 *"
b110000 9"
b101100 )
b101100 ?
b101100 w
b101100 L"
b1011 Q
b1011 S
b1011 {
b1010 F
b1010 P
b1100100 E
b1100100 O
b1100100 y
b1100100 A"
b1100100 F"
b0 n
b0 '"
b0 W
b0 \
b0 p
b0 &"
b0 o
b1011 q
b1011 ""
b0 ,
b0 J
b0 %"
b0 J"
b0 m
b0 H"
b0 8
b0 E"
b0 l
b0 C"
b0 /
b0 i
b0 K
b0 k
b0 *
b0 ]
b0 t
b0 B
b0 u
b1010 V
b1010 !"
b1010 M"
b1101 }
b1101 ?"
1!
#575
b1100 $
0!
#600
b0 9
b0 <
bx000000000000000000000000 A
bx000000000000000000000000 V"
b110100 ="
b110100 K"
b101001001010100000010001000 <"
b101000000100010 c
b101000000100010 U"
b101000000100010 X"
b101000000100010 W"
b1010 d
b1010 R"
b1001 Q"
b1101 e
b1101 P"
b1010 O"
b101001001010100000010001000 ;"
b101001001010100000010001000 T"
b1010010010101000000100010 S"
b1010 `
b1001 b
b1010 a
b0 ;
b11 :
1("
0T
b1001010100101100000100100 s
b1001010100101100000100100 v
b110100 ,"
b110100 :"
b1100100 @"
b1100100 B"
b1100100 G"
b1100100 N"
b1010010010101000000100010 *
b1010010010101000000100010 ]
b1010010010101000000100010 t
b110000 B
b110000 u
b0 q
b0 ""
b111 /
b111 i
b10 K
b10 k
b0 Q
b0 S
b0 {
b0 F
b0 P
b0 E
b0 O
b0 y
b0 A"
b0 F"
b0 N
b0 x
b110100 >
b110100 r
b110100 *"
b110100 9"
b110000 )
b110000 ?
b110000 w
b110000 L"
b1011 V
b1011 !"
b1011 M"
b1100100 }
b1100100 ?"
1!
#625
b1101 $
0!
#650
b110 9
b110 <
b11 6
b11 H
b111000 ="
b111000 K"
bx00000000000000000000000000 A
bx00000000000000000000000000 V"
b1010010110110000000100101 s
b1010010110110000000100101 v
b111000 ,"
b111000 :"
b100101010010110000010010000 <"
1T
b1010 I
b1010 )"
b100010 ;
b1010 7
b1010 $"
0+
b101100000100100 c
b101100000100100 U"
b101100000100100 X"
b101100000100100 W"
b1101 d
b1101 R"
b1010 Q"
b1010 e
b1010 P"
b1001 O"
b100101010010110000010010000 ;"
b100101010010110000010010000 T"
b1001010100101100000100100 S"
b1011 `
b1010 b
b1001 a
b0 @"
b0 B"
b0 G"
b0 N"
b111000 >
b111000 r
b111000 *"
b111000 9"
b110100 )
b110100 ?
b110100 w
b110100 L"
b10 N
b10 x
b1010 n
b1010 '"
b1001 W
b1001 \
b1001 p
b1001 &"
b1010 o
b101000000100010 q
b101000000100010 ""
b1010 ,
b1010 J
b1010 %"
b1010 J"
b1010 m
b1010 H"
b1101 8
b1101 E"
b1101 l
b1101 C"
b1001010100101100000100100 *
b1001010100101100000100100 ]
b1001010100101100000100100 t
b110100 B
b110100 u
b0 V
b0 !"
b0 M"
b0 }
b0 ?"
b0 -
b0 |
1!
#675
b1110 $
0!
#700
b0 9
b0 <
b10 6
b10 H
bx0000000000000000000000000000 A
bx0000000000000000000000000000 V"
b111100 ="
b111100 K"
b101001011011000000010010100 <"
b110000000100101 c
b110000000100101 U"
b110000000100101 X"
b110000000100101 W"
b1100100 d
b1100100 R"
b1011 Q"
b1101 e
b1101 P"
b1010 O"
b101001011011000000010010100 ;"
b101001011011000000010010100 T"
b1010010110110000000100101 S"
b1100 `
b1011 b
b1010 a
b1011 I
b1011 )"
b100100 ;
b11 7
b11 $"
0+
b10 Y
b10 I"
b0 s
b0 v
b111100 ,"
b111100 :"
05
b1010010110110000000100101 *
b1010010110110000000100101 ]
b1010010110110000000100101 t
b111000 B
b111000 u
b1011 n
b1011 '"
b1010 W
b1010 \
b1010 p
b1010 &"
b1001 o
b101100000100100 q
b101100000100100 ""
b11 ,
b11 J
b11 %"
b11 J"
b1101 m
b1101 H"
b1010 8
b1010 E"
b1010 l
b1010 C"
b1010 Q
b1010 S
b1010 {
b1010 F
b1010 P
b11 E
b11 O
b11 y
b11 A"
b11 F"
b111100 >
b111100 r
b111100 *"
b111100 9"
b111000 )
b111000 ?
b111000 w
b111000 L"
b10 -
b10 |
1!
#725
b1111 $
0!
#750
b1 9
b1 <
b1000000 ="
b1000000 K"
b1111 6
b1111 H
bx000000000000000000000000000000 A
bx000000000000000000000000000000 V"
b1000000 ,"
b1000000 :"
b0 <"
b10 7
b10 $"
b1100 I
b1100 )"
b100101 ;
b0 c
b0 U"
b0 X"
b0 W"
b0 d
b0 R"
b0 Q"
b0 e
b0 P"
b0 O"
b0 ;"
b0 T"
b0 S"
b0 `
b0 b
b0 a
b10 Y
b10 I"
b11 @"
b11 B"
b11 G"
b11 N"
15
b1000000 >
b1000000 r
b1000000 *"
b1000000 9"
b111100 )
b111100 ?
b111100 w
b111100 L"
b1011 Q
b1011 S
b1011 {
b11 F
b11 P
b10 ,
b10 J
b10 %"
b10 J"
b10 E
b10 O
b10 y
b10 A"
b10 F"
b1100 n
b1100 '"
b1011 W
b1011 \
b1011 p
b1011 &"
b1010 o
b110000000100101 q
b110000000100101 ""
b1100100 m
b1100100 H"
b1101 8
b1101 E"
b1101 l
b1101 C"
b0 *
b0 ]
b0 t
b111100 B
b111100 u
b1010 V
b1010 !"
b1010 M"
b11 }
b11 ?"
1!
#775
b10000 $
0!
#800
b0 9
b0 <
b0 6
b0 H
1+
b1000100 ="
b1000100 K"
b0 I
b0 )"
b0 ;
b0 7
b0 $"
b1000100 ,"
b1000100 :"
b0 Y
b0 I"
b10 @"
b10 B"
b10 G"
b10 N"
b1000000 B
b1000000 u
b0 n
b0 '"
b0 W
b0 \
b0 p
b0 &"
b0 o
b0 q
b0 ""
b0 m
b0 H"
b0 8
b0 E"
b0 l
b0 C"
b1100 Q
b1100 S
b1100 {
b10 F
b10 P
b0 ,
b0 J
b0 %"
b0 J"
b1111 E
b1111 O
b1111 y
b1111 A"
b1111 F"
b1000100 >
b1000100 r
b1000100 *"
b1000100 9"
b1000000 )
b1000000 ?
b1000000 w
b1000000 L"
b1011 V
b1011 !"
b1011 M"
b10 }
b10 ?"
1!
#825
b10001 $
0!
#850
b1001000 ="
b1001000 K"
b1001000 ,"
b1001000 :"
b1111 @"
b1111 B"
b1111 G"
b1111 N"
b1001000 >
b1001000 r
b1001000 *"
b1001000 9"
b1000100 )
b1000100 ?
b1000100 w
b1000100 L"
b0 Q
b0 S
b0 {
b0 F
b0 P
b0 E
b0 O
b0 y
b0 A"
b0 F"
b1000100 B
b1000100 u
b1100 V
b1100 !"
b1100 M"
b1111 }
b1111 ?"
1!
#875
b10010 $
0!
#900
b1001100 ="
b1001100 K"
b1001100 ,"
b1001100 :"
b0 @"
b0 B"
b0 G"
b0 N"
b1001000 B
b1001000 u
b1001100 >
b1001100 r
b1001100 *"
b1001100 9"
b1001000 )
b1001000 ?
b1001000 w
b1001000 L"
b0 V
b0 !"
b0 M"
b0 }
b0 ?"
1!
#925
b10011 $
0!
#950
b1010000 ="
b1010000 K"
b1010000 ,"
b1010000 :"
b1010000 >
b1010000 r
b1010000 *"
b1010000 9"
b1001100 )
b1001100 ?
b1001100 w
b1001100 L"
b1001100 B
b1001100 u
1!
#975
b10100 $
0!
#1000
b1010100 ="
b1010100 K"
b1010100 ,"
b1010100 :"
b1010000 B
b1010000 u
b1010100 >
b1010100 r
b1010100 *"
b1010100 9"
b1010000 )
b1010000 ?
b1010000 w
b1010000 L"
1!
