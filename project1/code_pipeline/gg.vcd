$date
	Sun Dec 10 01:04:28 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var wire 10 ! ctrl_sig [9:0] $end
$var reg 1 " Branch $end
$var reg 1 # Clk $end
$var reg 1 $ Jump $end
$var reg 1 % Reset $end
$var reg 1 & Start $end
$var integer 32 ' counter [31:0] $end
$var integer 32 ( flush [31:0] $end
$var integer 32 ) i [31:0] $end
$var integer 32 * outfile [31:0] $end
$var integer 32 + stall [31:0] $end
$scope module CPU $end
$var wire 1 # clk_i $end
$var wire 1 % rst_i $end
$var wire 1 & start_i $end
$var wire 32 , inst_addr [31:0] $end
$var wire 32 - inst [31:0] $end
$var wire 10 . ctrl_sig [9:0] $end
$var wire 1 / Zero $end
$var wire 32 0 MUXforward2_data [31:0] $end
$var wire 2 1 MEMWB_sig [1:0] $end
$var wire 4 2 IDEX_sig [3:0] $end
$var wire 2 3 EXMEM_sig [1:0] $end
$var reg 1 4 ALUSrc $end
$var reg 1 5 Branch $end
$var reg 1 6 EXMEM_MemRead $end
$var reg 1 7 EXMEM_MemWrite $end
$var reg 2 8 IDEX_ALUOp [1:0] $end
$var reg 1 9 IDEX_ALUSrc $end
$var reg 1 : IDEX_RegDst $end
$var reg 1 ; Jump $end
$var reg 1 < MEMWB_MemtoReg $end
$var reg 1 = MEMWB_RegWrite $end
$var reg 1 > MemRead $end
$var reg 1 ? MemWrite $end
$var reg 1 @ MemtoReg $end
$var reg 1 A RegDst $end
$var reg 1 B RegWrite $end
$scope module ALU $end
$var wire 32 C data_o [31:0] $end
$var wire 32 D data2_i [31:0] $end
$var wire 32 E data1_i [31:0] $end
$var wire 1 / Zero_o $end
$var wire 3 F ALUCtrl_i [2:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 2 G ALUOp_i [1:0] $end
$var wire 6 H funct_i [5:0] $end
$var wire 3 I ALUCtrl_o [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 J data2_in [31:0] $end
$var wire 32 K data_o [31:0] $end
$var wire 32 L data1_in [31:0] $end
$upscope $end
$scope module Add_address $end
$var wire 32 M data_o [31:0] $end
$var wire 32 N data2_in [31:0] $end
$var wire 32 O data1_in [31:0] $end
$upscope $end
$scope module Control $end
$var wire 6 P Op_i [5:0] $end
$var wire 2 Q ALUOp_o [1:0] $end
$var reg 10 R ctrl_signal [9:0] $end
$upscope $end
$scope module DataMemory $end
$var wire 1 6 MemRead_i $end
$var wire 1 7 MemWrite_i $end
$var wire 1 # clk_i $end
$var wire 32 S addr_i [31:0] $end
$var wire 32 T Writedata_i [31:0] $end
$var reg 32 U Readdata_o [31:0] $end
$upscope $end
$scope module EXMEM $end
$var wire 32 V addr_i [31:0] $end
$var wire 1 # clk_i $end
$var wire 1 % rst_i $end
$var wire 5 W rd_i [4:0] $end
$var wire 32 X data_i [31:0] $end
$var wire 2 Y WB_i [1:0] $end
$var wire 2 Z M_i [1:0] $end
$var reg 2 [ M_o [1:0] $end
$var reg 2 \ WB_o [1:0] $end
$var reg 32 ] addr_o [31:0] $end
$var reg 32 ^ data_o [31:0] $end
$var reg 5 _ rd_o [4:0] $end
$upscope $end
$scope module Flush $end
$var wire 1 5 Branch_i $end
$var wire 1 ; Jump_i $end
$var wire 1 / Zero_i $end
$var wire 1 ` flush_o $end
$upscope $end
$scope module ForwardUnit $end
$var wire 5 a EXMEM_RD_i [4:0] $end
$var wire 1 b EXMEM_RegWrite_i $end
$var wire 5 c IDEX_RS_i [4:0] $end
$var wire 1 = MEMWB_RegWrite_i $end
$var wire 5 d MEMWB_RD_i [4:0] $end
$var wire 5 e IDEX_RT_i [4:0] $end
$var reg 2 f Forward1_o [1:0] $end
$var reg 2 g Forward2_o [1:0] $end
$upscope $end
$scope module HazardDetection $end
$var wire 1 h IFIDhazard_o $end
$var wire 1 i MUX_Control_hazard_o $end
$var wire 5 j rt_i [4:0] $end
$var wire 32 k inst_i [31:0] $end
$var wire 1 l hazard_o $end
$var wire 1 m MemRead_i $end
$upscope $end
$scope module IDEX $end
$var wire 1 # clk_i $end
$var wire 5 n rd_i [4:0] $end
$var wire 5 o rs_i [4:0] $end
$var wire 1 % rst_i $end
$var wire 5 p rt_i [4:0] $end
$var wire 32 q signextend_i [31:0] $end
$var wire 32 r data2_i [31:0] $end
$var wire 32 s data1_i [31:0] $end
$var wire 2 t WB_i [1:0] $end
$var wire 2 u M_i [1:0] $end
$var wire 4 v EX_i [3:0] $end
$var reg 4 w EX_o [3:0] $end
$var reg 2 x M_o [1:0] $end
$var reg 2 y WB_o [1:0] $end
$var reg 32 z data1_o [31:0] $end
$var reg 32 { data2_o [31:0] $end
$var reg 5 | rd_o [4:0] $end
$var reg 5 } rs_o [4:0] $end
$var reg 5 ~ rt_o [4:0] $end
$var reg 32 !" signextend_o [31:0] $end
$upscope $end
$scope module IFID $end
$var wire 1 # clk_i $end
$var wire 1 ` flush_i $end
$var wire 1 h hazard_i $end
$var wire 32 "" pc_i [31:0] $end
$var wire 1 % rst_i $end
$var wire 32 #" inst_i [31:0] $end
$var reg 32 $" inst_o [31:0] $end
$var reg 32 %" pc_o [31:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 &" instr_o [31:0] $end
$var wire 32 '" addr_i [31:0] $end
$upscope $end
$scope module MEMWB $end
$var wire 2 (" WB_i [1:0] $end
$var wire 32 )" addr_i [31:0] $end
$var wire 1 # clk_i $end
$var wire 32 *" data_i [31:0] $end
$var wire 5 +" rd_i [4:0] $end
$var wire 1 % rst_i $end
$var reg 2 ," WB_o [1:0] $end
$var reg 32 -" addr_o [31:0] $end
$var reg 32 ." data_o [31:0] $end
$var reg 5 /" rd_o [4:0] $end
$upscope $end
$scope module MUX32 $end
$var wire 32 0" data2_i [31:0] $end
$var wire 1 9 select_i $end
$var wire 32 1" data_o [31:0] $end
$var wire 32 2" data1_i [31:0] $end
$upscope $end
$scope module MUX5 $end
$var wire 5 3" data1_i [4:0] $end
$var wire 5 4" data2_i [4:0] $end
$var wire 1 : select_i $end
$var wire 5 5" data_o [4:0] $end
$upscope $end
$scope module MUX_Add $end
$var wire 1 / Zero_i $end
$var wire 32 6" data1_i [31:0] $end
$var wire 32 7" data2_i [31:0] $end
$var wire 1 5 select_i $end
$var reg 32 8" data_o [31:0] $end
$var reg 1 9" select $end
$upscope $end
$scope module MUX_Control $end
$var wire 2 :" ALUOp_i [1:0] $end
$var wire 1 4 ALUSrc_i $end
$var wire 1 > MemRead_i $end
$var wire 1 ? MemWrite_i $end
$var wire 1 @ MemtoReg_i $end
$var wire 1 A RegDst_i $end
$var wire 1 B RegWrite_i $end
$var wire 1 i hazard_i $end
$var reg 4 ;" EX_o [3:0] $end
$var reg 2 <" M_o [1:0] $end
$var reg 2 =" WB_o [1:0] $end
$upscope $end
$scope module MUX_Jump $end
$var wire 32 >" data1_32_i [31:0] $end
$var wire 32 ?" data2_i [31:0] $end
$var wire 1 ; select_i $end
$var wire 28 @" data1_28_i [27:0] $end
$var reg 32 A" data1 [31:0] $end
$var reg 32 B" data_o [31:0] $end
$upscope $end
$scope module MUX_Write $end
$var wire 32 C" data1_i [31:0] $end
$var wire 32 D" data2_i [31:0] $end
$var wire 1 < select_i $end
$var wire 32 E" data_o [31:0] $end
$upscope $end
$scope module MUXforward_1 $end
$var wire 32 F" EXMEM_addr_i [31:0] $end
$var wire 32 G" MEMWB_data_i [31:0] $end
$var wire 32 H" data_i [31:0] $end
$var wire 2 I" select_i [1:0] $end
$var reg 32 J" data_o [31:0] $end
$upscope $end
$scope module MUXforward_2 $end
$var wire 32 K" EXMEM_addr_i [31:0] $end
$var wire 32 L" MEMWB_data_i [31:0] $end
$var wire 32 M" data_i [31:0] $end
$var wire 2 N" select_i [1:0] $end
$var reg 32 O" data_o [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 # clk_i $end
$var wire 1 l hazard_i $end
$var wire 32 P" pc_i [31:0] $end
$var wire 1 % rst_i $end
$var wire 1 & start_i $end
$var reg 32 Q" pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 R" RDaddr_i [4:0] $end
$var wire 32 S" RDdata_i [31:0] $end
$var wire 5 T" RSaddr_i [4:0] $end
$var wire 32 U" RSdata_o [31:0] $end
$var wire 5 V" RTaddr_i [4:0] $end
$var wire 32 W" RTdata_o [31:0] $end
$var wire 1 = RegWrite_i $end
$var wire 1 # clk_i $end
$upscope $end
$scope module ShiftLeft26 $end
$var wire 26 X" data_i [25:0] $end
$var wire 28 Y" data_o [27:0] $end
$upscope $end
$scope module ShiftLeft32 $end
$var wire 32 Z" data_i [31:0] $end
$var reg 32 [" data_o [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 16 \" data_i [15:0] $end
$var wire 32 ]" data_o [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#12
$dumpvars
b0 ]"
b0 \"
bx0000 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b100 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b100 B"
b0 A"
b0 @"
b100 ?"
b100 >"
b10 ="
b0 <"
b111 ;"
b11 :"
09"
b100 8"
bx 7"
b100 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
bx *"
b0 )"
b0 ("
b0 '"
b100000000100000 &"
b0 %"
b0 $"
b100000000100000 #"
b100 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b111 v
b0 u
b10 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
0m
0l
b0 k
b0 j
0i
0h
b0 g
b0 f
b0 e
b0 d
bx c
0b
b0 a
0`
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
bx U
b0 T
b0 S
b1110010000 R
b11 Q
b0 P
b0 O
bx0000 N
bx M
b0 L
b100 K
b100 J
b10 I
b0 H
b0 G
b10 F
b0 E
b0 D
b0 C
1B
1A
0@
0?
0>
0=
0<
0;
0:
09
b0 8
07
06
05
04
b0 3
b0 2
b0 1
b0 0
1/
b1110010000 .
b0 -
b0 ,
b0 +
b11 *
b100000 )
b0 (
b0 '
1&
1%
z$
1#
z"
bz !
$end
#25
0#
#50
b0 F
b0 I
1:
b11 8
b11 G
b1000 B"
b1000 P"
bx000000 N
bx000000 ["
b100000000010010000000000001010 #"
b100000000010010000000000001010 &"
b1000 8"
b1000 ?"
b10000000010000000 A"
b100000000100000 q
b100000000100000 Z"
b100000000100000 ]"
b100000000100000 \"
b10000000010000000 @"
b10000000010000000 Y"
b100000000100000 X"
b1000 n
bx ."
bx C"
b1000 K
b1000 ""
b1000 6"
b1000 >"
b100 ,
b100 L
b100 '"
b100 Q"
b111 2
b111 w
b10 Y
b10 y
b100000000100000 -
b100000000100000 k
b100000000100000 $"
b100 O
b100 %"
b1 '
1#
#75
0#
#100
b1000 v
b1000 ;"
14
0A
b0 Q
b0 :"
b1010000 .
b1010000 R
b10 F
b10 I
bx00000000 N
bx00000000 ["
b1100 B"
b1100 P"
b1001000000000000101000 A"
b1010 q
b1010 Z"
b1010 ]"
b1010 \"
b1000 P
b1001 V"
b1001000000000000101000 @"
b1001000000000000101000 Y"
b10010000000000001010 X"
b0 n
b1001 p
b1000 W
b1000 5"
b100000 H
1b
b10101101000000000000000000000000 #"
b10101101000000000000000000000000 &"
b1100 8"
b1100 ?"
b100000000010010000000000001010 -
b100000000010010000000000001010 k
b100000000010010000000000001010 $"
b1000 O
b1000 %"
b1000 |
b1000 4"
b100000000100000 !"
b100000000100000 0"
b10 \
b10 ("
b1100 K
b1100 ""
b1100 6"
b1100 >"
b1000 ,
b1000 L
b1000 '"
b1000 Q"
b10 '
1#
#125
0#
#150
b1 u
b1 <"
b0 t
b0 ="
1?
0B
b1010 C
b1010 V
0/
b1010 D
b1010 1"
b1001000 .
b1001000 R
1=
0:
b0 8
b0 G
19
b10 F
b10 I
b10000 B"
b10000 P"
bx0000000000 N
bx0000000000 ["
b10101101000010010000000000000100 #"
b10101101000010010000000000000100 &"
b10000 8"
b10000 ?"
b100000000000000000000000000 A"
b1001 W
b1001 5"
b1010 H
b0 q
b0 Z"
b0 ]"
b0 \"
b101011 P
b0 V"
b1000 T"
b100000000000000000000000000 @"
b100000000000000000000000000 Y"
b1000000000000000000000000 X"
b0 p
b1000 o
b10 1
b10 ,"
b10000 K
b10000 ""
b10000 6"
b10000 >"
b1100 ,
b1100 L
b1100 '"
b1100 Q"
b1000 _
b1000 a
b1000 +"
b0 |
b0 4"
b1001 e
b1001 j
b1001 ~
b1001 3"
b1010 !"
b1010 0"
b1000 2
b1000 w
b10101101000000000000000000000000 -
b10101101000000000000000000000000 k
b10101101000000000000000000000000 $"
b1100 O
b1100 %"
b11 '
1#
#175
0#
#200
b0 C
b0 V
bx000000000000 N
bx000000000000 ["
1/
b10100 B"
b10100 P"
b100001001000000000000010000 A"
b100 q
b100 Z"
b100 ]"
b100 \"
b1001 V"
b100001001000000000000010000 @"
b100001001000000000000010000 Y"
b1000010010000000000000100 X"
b1001 p
b0 W
b0 5"
b0 H
b0 D
b0 1"
b10001101000011010000000000000100 #"
b10001101000011010000000000000100 &"
b10100 8"
b10100 ?"
b1000 d
b1000 /"
b1000 R"
b10101101000010010000000000000100 -
b10101101000010010000000000000100 k
b10101101000010010000000000000100 $"
b10000 O
b10000 %"
b0 e
b0 j
b0 ~
b0 3"
b1000 }
b0 !"
b0 0"
b1 Z
b1 x
b0 Y
b0 y
b1001 _
b1001 a
b1001 +"
b1010 S
b1010 ]
b1010 )"
b1010 F"
b1010 K"
b10100 K
b10100 ""
b10100 6"
b10100 >"
b10000 ,
b10000 L
b10000 '"
b10000 Q"
b100 '
1#
#225
0#
#250
b10 u
b10 <"
b11 t
b11 ="
1>
0?
1B
1@
b1110100 .
b1110100 R
17
b100 C
b100 V
b11000 B"
b11000 P"
0/
b1010 0
b1010 X
b1010 2"
b1010 O"
b1010 E"
b1010 G"
b1010 L"
b1010 S"
b1101010010111100000100000 #"
b1101010010111100000100000 &"
b11000 8"
b11000 ?"
b100001101000000000000010000 A"
0b
b1001 W
b1001 5"
b1 g
b1 N"
b100 H
b100 D
b100 1"
b100011 P
b1101 V"
b100001101000000000000010000 @"
b100001101000000000000010000 Y"
b1000011010000000000000100 X"
b1101 p
b1001 d
b1001 /"
b1001 R"
b1010 -"
b1010 D"
b11000 K
b11000 ""
b11000 6"
b11000 >"
b10100 ,
b10100 L
b10100 '"
b10100 Q"
b0 _
b0 a
b0 +"
b0 S
b0 ]
b0 )"
b0 F"
b0 K"
b1 3
b1 [
b0 \
b0 ("
b1001 e
b1001 j
b1001 ~
b1001 3"
b100 !"
b100 0"
b10001101000011010000000000000100 -
b10001101000011010000000000000100 k
b10001101000011010000000000000100 $"
b10100 O
b10100 %"
b101 '
1#
#275
0#
#300
0>
0@
04
1A
b11 Q
b11 :"
b0 v
b0 ;"
b0 u
b0 <"
b0 t
b0 ="
b1110010000 .
b1110010000 R
0=
bx00000000000000 N
bx00000000000000 ["
1i
1h
1l
b11100 B"
b11100 P"
b110101001011110000010000000 A"
b0 0
b0 X
b0 2"
b0 O"
b0 E"
b0 G"
b0 L"
b0 S"
b111100000100000 q
b111100000100000 Z"
b111100000100000 ]"
b111100000100000 \"
b0 P
b1010 r
b1010 W"
b1001 V"
b1101 T"
b110101001011110000010000000 @"
b110101001011110000010000000 Y"
b1101010010111100000100000 X"
b1111 n
b1001 p
b1101 o
b1101 W
b1101 5"
1m
b0 g
b0 N"
b100000000010100000000000001101 #"
b100000000010100000000000001101 &"
b11100 8"
b11100 ?"
b0 d
b0 /"
b0 R"
b0 -"
b0 D"
b0 1
b0 ,"
b1101010010111100000100000 -
b1101010010111100000100000 k
b1101010010111100000100000 $"
b11000 O
b11000 %"
b1101 e
b1101 j
b1101 ~
b1101 3"
b10 Z
b10 x
b11 Y
b11 y
b1001 _
b1001 a
b1001 +"
b1010 T
b1010 ^
b100 S
b100 ]
b100 )"
b100 F"
b100 K"
b11100 K
b11100 ""
b11100 6"
b11100 >"
b11000 ,
b11000 L
b11000 '"
b11000 Q"
b110 '
1#
#325
0#
#350
b1010 U
b1010 *"
b111 v
b111 ;"
b10 t
b10 ="
07
16
09
b1010 C
b1010 V
0i
0h
0l
b100 E"
b100 G"
b100 L"
b100 S"
1b
b1001 W
b1001 5"
b100000 H
b1010 D
b1010 1"
0m
b1001 d
b1001 /"
b1001 R"
b100 -"
b100 D"
b1101 _
b1101 a
b1101 +"
b0 T
b0 ^
b10 3
b10 [
b11 \
b11 ("
b1111 |
b1111 4"
b1001 e
b1001 j
b1001 ~
b1001 3"
b1101 }
b111100000100000 !"
b111100000100000 0"
b1010 0
b1010 X
b1010 2"
b1010 O"
b1010 {
b1010 M"
b0 2
b0 w
b0 Z
b0 x
b0 Y
b0 y
b111 '
1#
#375
0#
#400
b1000 v
b1000 ;"
14
0A
b1010 E"
b1010 G"
b1010 L"
b1010 S"
b1111 W
b1111 5"
b0 Q
b0 :"
b1010000 .
b1010000 R
1<
1=
1:
b11 8
b11 G
06
bx0000000000000000 N
bx0000000000000000 ["
b100000 B"
b100000 P"
b1010000000000000110100 A"
b1101 q
b1101 Z"
b1101 ]"
b1101 \"
b1000 P
b0 r
b0 W"
b1010 V"
b0 T"
b1010000000000000110100 @"
b1010000000000000110100 Y"
b10100000000000001101 X"
b0 n
b1010 p
b0 o
0b
b1001010010101100000011000 #"
b1001010010101100000011000 &"
b100000 8"
b100000 ?"
b1101 d
b1101 /"
b1101 R"
b1010 ."
b1010 C"
b11 1
b11 ,"
b100000000010100000000000001101 -
b100000000010100000000000001101 k
b100000000010100000000000001101 $"
b11100 O
b11100 %"
b111 2
b111 w
b10 Y
b10 y
b1001 _
b1001 a
b1001 +"
b1010 T
b1010 ^
b1010 S
b1010 ]
b1010 )"
b1010 F"
b1010 K"
b0 3
b0 [
b0 \
b0 ("
b100000 K
b100000 ""
b100000 6"
b100000 >"
b11100 ,
b11100 L
b11100 '"
b11100 Q"
b1000 '
1#
#425
0#
#450
b111 v
b111 ;"
04
1A
b11 Q
b11 :"
b1110010000 .
b1110010000 R
0<
0=
0:
b0 8
b0 G
19
b1101 C
b1101 V
b10 F
b10 I
b100100 B"
b100100 P"
0/
bx000000000000000000 N
bx000000000000000000 ["
b1000000000000000000000001011 #"
b1000000000000000000000001011 &"
b100100 8"
b100100 ?"
b100101001010110000001100000 A"
1b
b1010 W
b1010 5"
b1101 H
b1101 D
b1101 1"
b101100000011000 q
b101100000011000 Z"
b101100000011000 ]"
b101100000011000 \"
b0 P
b1010 r
b1010 W"
b1001 V"
b1010 s
b1010 U"
b1001 T"
b100101001010110000001100000 @"
b100101001010110000001100000 Y"
b1001010010101100000011000 X"
b1011 n
b1001 p
b1001 o
b1001 d
b1001 /"
b1001 R"
b1010 -"
b1010 D"
b0 1
b0 ,"
b100100 K
b100100 ""
b100100 6"
b100100 >"
b100000 ,
b100000 L
b100000 '"
b100000 Q"
b1111 _
b1111 a
b1111 +"
b10 \
b10 ("
b0 |
b0 4"
b1010 e
b1010 j
b1010 ~
b1010 3"
b0 }
b1101 !"
b1101 0"
b0 0
b0 X
b0 2"
b0 O"
b0 {
b0 M"
b1000 2
b1000 w
b1001010010101100000011000 -
b1001010010101100000011000 k
b1001010010101100000011000 $"
b100000 O
b100000 %"
b1001 '
1#
#475
0#
#500
b0 t
b0 ="
1`
b0 v
b0 ;"
1;
0B
0A
b101 F
b101 I
1/
b0 Q
b0 :"
b1 .
b1 R
1=
1:
b11 8
b11 G
09
b1100100 C
b1100100 V
bx00000000000000000000 N
bx00000000000000000000 ["
b101100 B"
b101100 P"
b101100 A"
b1011 q
b1011 Z"
b1011 ]"
b1011 \"
b10 P
b0 r
b0 W"
b0 V"
b0 s
b0 U"
b0 T"
b101100 @"
b101100 Y"
b1011 X"
b0 n
b0 p
b0 o
b1011 W
b1011 5"
b11000 H
b1010 D
b1010 1"
b100001001010010000000000000001 #"
b100001001010010000000000000001 &"
b101000 8"
b101000 ?"
b1111 d
b1111 /"
b1111 R"
b10 1
b10 ,"
b1000000000000000000000001011 -
b1000000000000000000000001011 k
b1000000000000000000000001011 $"
b100100 O
b100100 %"
b1011 |
b1011 4"
b1001 e
b1001 j
b1001 ~
b1001 3"
b1001 }
b101100000011000 !"
b101100000011000 0"
b1010 0
b1010 X
b1010 2"
b1010 O"
b1010 {
b1010 M"
b1010 E
b1010 J"
b1010 z
b1010 H"
b111 2
b111 w
b1010 _
b1010 a
b1010 +"
b0 T
b0 ^
b1101 S
b1101 ]
b1101 )"
b1101 F"
b1101 K"
b101000 K
b101000 ""
b101000 6"
b101000 >"
b100100 ,
b100100 L
b100100 '"
b100100 Q"
b1010 '
1#
#525
0#
#550
b10 t
b10 ="
0`
b111 v
b111 ;"
0;
1B
1A
b11 Q
b11 :"
b1110010000 .
b1110010000 R
0:
b0 8
b0 G
b10 F
b10 I
b0 C
b0 V
bx0000000000000000000000 N
bx0000000000000000000000 ["
b1101 E"
b1101 G"
b1101 L"
b1101 S"
b1010010010101000000100010 #"
b1010010010101000000100010 &"
b110000 8"
b110000 ?"
b110000 B"
b110000 P"
b0 A"
b0 W
b0 5"
b1011 H
b0 D
b0 1"
1/
b0 q
b0 Z"
b0 ]"
b0 \"
b0 P
b0 @"
b0 Y"
b0 X"
b1010 d
b1010 /"
b1010 R"
b1101 -"
b1101 D"
b110000 K
b110000 ""
b110000 6"
b110000 >"
b101100 ,
b101100 L
b101100 '"
b101100 Q"
b1011 _
b1011 a
b1011 +"
b1010 T
b1010 ^
b1100100 S
b1100100 ]
b1100100 )"
b1100100 F"
b1100100 K"
b0 |
b0 4"
b0 e
b0 j
b0 ~
b0 3"
b0 }
b1011 !"
b1011 0"
b0 0
b0 X
b0 2"
b0 O"
b0 {
b0 M"
b0 E
b0 J"
b0 z
b0 H"
b0 2
b0 w
b0 Y
b0 y
b0 -
b0 k
b0 $"
b0 O
b0 %"
b1011 '
b1 (
1#
#575
0#
#600
b0 F
b0 I
1:
b11 8
b11 G
bx000000000000000000000000 N
bx000000000000000000000000 ["
b110100 B"
b110100 P"
b101001001010100000010001000 A"
b1100100 E"
b1100100 G"
b1100100 L"
b1100100 S"
b101000000100010 q
b101000000100010 Z"
b101000000100010 ]"
b101000000100010 \"
b1010 r
b1010 W"
b1001 V"
b1101 s
b1101 U"
b1010 T"
b101001001010100000010001000 @"
b101001001010100000010001000 Y"
b1010010010101000000100010 X"
b1010 n
b1001 p
b1010 o
b0 H
0b
b1001010100101100000100100 #"
b1001010100101100000100100 &"
b110100 8"
b110100 ?"
b1011 d
b1011 /"
b1011 R"
b1100100 -"
b1100100 D"
b1010010010101000000100010 -
b1010010010101000000100010 k
b1010010010101000000100010 $"
b110000 O
b110000 %"
b0 !"
b0 0"
b111 2
b111 w
b10 Y
b10 y
b0 _
b0 a
b0 +"
b0 T
b0 ^
b0 S
b0 ]
b0 )"
b0 F"
b0 K"
b0 \
b0 ("
b110100 K
b110100 ""
b110100 6"
b110100 >"
b110000 ,
b110000 L
b110000 '"
b110000 Q"
b1100 '
1#
#625
0#
#650
0=
b110 F
b110 I
b11 C
b11 V
b111000 B"
b111000 P"
bx00000000000000000000000000 N
bx00000000000000000000000000 ["
b0 E"
b0 G"
b0 L"
b0 S"
b1010010110110000000100101 #"
b1010010110110000000100101 &"
b111000 8"
b111000 ?"
b100101010010110000010010000 A"
1b
b1010 W
b1010 5"
b100010 H
b1010 D
b1010 1"
0/
b101100000100100 q
b101100000100100 Z"
b101100000100100 ]"
b101100000100100 \"
b1101 r
b1101 W"
b1010 V"
b1010 s
b1010 U"
b1001 T"
b100101010010110000010010000 @"
b100101010010110000010010000 Y"
b1001010100101100000100100 X"
b1011 n
b1010 p
b1001 o
b0 d
b0 /"
b0 R"
b0 -"
b0 D"
b0 1
b0 ,"
b111000 K
b111000 ""
b111000 6"
b111000 >"
b110100 ,
b110100 L
b110100 '"
b110100 Q"
b10 \
b10 ("
b1010 |
b1010 4"
b1001 e
b1001 j
b1001 ~
b1001 3"
b1010 }
b101000000100010 !"
b101000000100010 0"
b1010 0
b1010 X
b1010 2"
b1010 O"
b1010 {
b1010 M"
b1101 E
b1101 J"
b1101 z
b1101 H"
b1001010100101100000100100 -
b1001010100101100000100100 k
b1001010100101100000100100 $"
b110100 O
b110100 %"
b1101 '
1#
#675
0#
#700
1=
b0 F
b0 I
b10 C
b10 V
bx0000000000000000000000000000 N
bx0000000000000000000000000000 ["
b111100 B"
b111100 P"
b101001011011000000010010100 A"
b110000000100101 q
b110000000100101 Z"
b110000000100101 ]"
b110000000100101 \"
b1100100 r
b1100100 W"
b1011 V"
b1101 s
b1101 U"
b1010 T"
b101001011011000000010010100 @"
b101001011011000000010010100 Y"
b1010010110110000000100101 X"
b1100 n
b1011 p
b1010 o
b1011 W
b1011 5"
b100100 H
b11 D
b11 1"
0/
b10 g
b10 N"
b0 #"
b0 &"
b111100 8"
b111100 ?"
b10 1
b10 ,"
b1010010110110000000100101 -
b1010010110110000000100101 k
b1010010110110000000100101 $"
b111000 O
b111000 %"
b1011 |
b1011 4"
b1010 e
b1010 j
b1010 ~
b1010 3"
b1001 }
b101100000100100 !"
b101100000100100 0"
b11 0
b11 X
b11 2"
b11 O"
b1101 {
b1101 M"
b1010 E
b1010 J"
b1010 z
b1010 H"
b1010 _
b1010 a
b1010 +"
b1010 T
b1010 ^
b11 S
b11 ]
b11 )"
b11 F"
b11 K"
b111100 K
b111100 ""
b111100 6"
b111100 >"
b111000 ,
b111000 L
b111000 '"
b111000 Q"
b1110 '
1#
#725
0#
#750
b1 F
b1 I
b1000000 B"
b1000000 P"
b1111 C
b1111 V
bx000000000000000000000000000000 N
bx000000000000000000000000000000 ["
b11 E"
b11 G"
b11 L"
b11 S"
b1000000 8"
b1000000 ?"
b0 A"
b10 D
b10 1"
b1100 W
b1100 5"
b10 g
b10 N"
b100101 H
b0 q
b0 Z"
b0 ]"
b0 \"
b0 r
b0 W"
b0 V"
b0 s
b0 U"
b0 T"
b0 @"
b0 Y"
b0 X"
b0 n
b0 p
b0 o
b1010 d
b1010 /"
b1010 R"
b11 -"
b11 D"
b1000000 K
b1000000 ""
b1000000 6"
b1000000 >"
b111100 ,
b111100 L
b111100 '"
b111100 Q"
b1011 _
b1011 a
b1011 +"
b11 T
b11 ^
b10 0
b10 X
b10 2"
b10 O"
b10 S
b10 ]
b10 )"
b10 F"
b10 K"
b1100 |
b1100 4"
b1011 e
b1011 j
b1011 ~
b1011 3"
b1010 }
b110000000100101 !"
b110000000100101 0"
b1100100 {
b1100100 M"
b1101 E
b1101 J"
b1101 z
b1101 H"
b0 -
b0 k
b0 $"
b111100 O
b111100 %"
b1111 '
1#
#775
0#
#800
b0 F
b0 I
b0 C
b0 V
1/
b1000100 B"
b1000100 P"
b10 E"
b10 G"
b10 L"
b10 S"
b0 W
b0 5"
b0 H
b0 g
b0 N"
b0 D
b0 1"
b1000100 8"
b1000100 ?"
b1011 d
b1011 /"
b1011 R"
b10 -"
b10 D"
b1000000 O
b1000000 %"
b0 |
b0 4"
b0 e
b0 j
b0 ~
b0 3"
b0 }
b0 !"
b0 0"
b0 {
b0 M"
b0 E
b0 J"
b0 z
b0 H"
b1100 _
b1100 a
b1100 +"
b10 T
b10 ^
b0 0
b0 X
b0 2"
b0 O"
b1111 S
b1111 ]
b1111 )"
b1111 F"
b1111 K"
b1000100 K
b1000100 ""
b1000100 6"
b1000100 >"
b1000000 ,
b1000000 L
b1000000 '"
b1000000 Q"
b10000 '
1#
#825
0#
#850
b1001000 B"
b1001000 P"
b1111 E"
b1111 G"
b1111 L"
b1111 S"
b1001000 8"
b1001000 ?"
b1100 d
b1100 /"
b1100 R"
b1111 -"
b1111 D"
b1001000 K
b1001000 ""
b1001000 6"
b1001000 >"
b1000100 ,
b1000100 L
b1000100 '"
b1000100 Q"
b0 _
b0 a
b0 +"
b0 T
b0 ^
b0 S
b0 ]
b0 )"
b0 F"
b0 K"
b1000100 O
b1000100 %"
b10001 '
1#
#875
0#
#900
b1001100 B"
b1001100 P"
b0 E"
b0 G"
b0 L"
b0 S"
b1001100 8"
b1001100 ?"
b0 d
b0 /"
b0 R"
b0 -"
b0 D"
b1001000 O
b1001000 %"
b1001100 K
b1001100 ""
b1001100 6"
b1001100 >"
b1001000 ,
b1001000 L
b1001000 '"
b1001000 Q"
b10010 '
1#
#925
0#
#950
b1010000 B"
b1010000 P"
b1010000 8"
b1010000 ?"
b1010000 K
b1010000 ""
b1010000 6"
b1010000 >"
b1001100 ,
b1001100 L
b1001100 '"
b1001100 Q"
b1001100 O
b1001100 %"
b10011 '
1#
#975
0#
#1000
b1010100 B"
b1010100 P"
b1010100 8"
b1010100 ?"
b1010000 O
b1010000 %"
b1010100 K
b1010100 ""
b1010100 6"
b1010100 >"
b1010000 ,
b1010000 L
b1010000 '"
b1010000 Q"
b10100 '
1#
#1025
0#
